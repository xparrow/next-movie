{"kind":"FETCH","data":{"headers":{"access-control-allow-origin":"*","alt-svc":"h3=\":443\"; ma=86400","cf-ray":"8553b8e2da611ecc-NRT","connection":"keep-alive","content-encoding":"br","content-type":"application/json; charset=UTF-8","date":"Wed, 14 Feb 2024 07:50:47 GMT","nel":"{\"success_fraction\":0,\"report_to\":\"cf-nel\",\"max_age\":604800}","report-to":"{\"endpoints\":[{\"url\":\"https:\\/\\/a.nel.cloudflare.com\\/report\\/v3?s=CqylNE1IsxiHkZlyo2wvwIZK8RbLISZ7V4YyJbs7eFvKosI4UKa3evApMtajkQ3uVoiLBi8335VjU1kPJFmBG0POcRbJ5kqHVXceXbMIHCxmWHvPdNnnmJhe5aMpEYAdC3a7qeH5KKQXyxHMi9c9drHB9wxhYWc%3D\"}],\"group\":\"cf-nel\",\"max_age\":604800}","server":"cloudflare","transfer-encoding":"chunked","vary":"Accept-Encoding"},"body":"","status":200,"url":"https://nomad-movies.nomadcoders.workers.dev/movies/10991/similar"},"revalidate":31536000,"tags":[]}