{"kind":"FETCH","data":{"headers":{"access-control-allow-origin":"*","alt-svc":"h3=\":443\"; ma=86400","cf-ray":"85499f802b273402-NRT","connection":"keep-alive","content-encoding":"br","content-type":"application/json; charset=UTF-8","date":"Tue, 13 Feb 2024 02:25:50 GMT","nel":"{\"success_fraction\":0,\"report_to\":\"cf-nel\",\"max_age\":604800}","report-to":"{\"endpoints\":[{\"url\":\"https:\\/\\/a.nel.cloudflare.com\\/report\\/v3?s=sTejrawGKVkFPPvQcLVAwYfFeyY5ExpowkBQBst3MnSGxo8DuE8oQdpNUP%2FzOfLAi9awcw8gBqIzrht%2BKh3mhva9j0v6sh00P0egFC652CVGiGAv7p%2FyC2Dbwq%2F7J2y%2BtKryhyk6bp0B8HAAQR5AzuNi9GRpqLg%3D\"}],\"group\":\"cf-nel\",\"max_age\":604800}","server":"cloudflare","transfer-encoding":"chunked","vary":"Accept-Encoding"},"body":"","status":200,"url":"https://nomad-movies.nomadcoders.workers.dev/movies/753342/similar"},"revalidate":31536000,"tags":[]}