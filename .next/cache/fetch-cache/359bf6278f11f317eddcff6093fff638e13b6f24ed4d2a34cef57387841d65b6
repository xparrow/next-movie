{"kind":"FETCH","data":{"headers":{"access-control-allow-origin":"*","alt-svc":"h3=\":443\"; ma=86400","cf-ray":"855bdb02aa1680b7-NRT","connection":"keep-alive","content-encoding":"br","content-type":"application/json; charset=UTF-8","date":"Thu, 15 Feb 2024 07:32:11 GMT","nel":"{\"success_fraction\":0,\"report_to\":\"cf-nel\",\"max_age\":604800}","report-to":"{\"endpoints\":[{\"url\":\"https:\\/\\/a.nel.cloudflare.com\\/report\\/v3?s=R6JAeGffZxkZFLKRUp4QWHAiHCHwAmUx3UOcQ%2BOjqTpMTDuRov0KrOibBYyEku%2FGjw3mKOgmOFaVp%2FP41L9BBYNeiTxd7QmWJ32ZSCnWiZEqg5erKkjv4PdpL1I1cOuGtNhu0B9mFvk53odwI1g5Av2XhYXCk3k%3D\"}],\"group\":\"cf-nel\",\"max_age\":604800}","server":"cloudflare","transfer-encoding":"chunked","vary":"Accept-Encoding"},"body":"","status":200,"url":"https://nomad-movies.nomadcoders.workers.dev/movies"},"revalidate":31536000,"tags":[]}